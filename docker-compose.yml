version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: online_school_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: online_school
      POSTGRES_USER: online_school_user
      POSTGRES_PASSWORD: online_school_pass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U online_school_user -d online_school"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - online_school_network

  redis:
    image: redis:7-alpine
    container_name: online_school_redis
    restart: unless-stopped
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - online_school_network
      
  # Django приложение
  web:
    build: .
    container_name: online_school_web
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=online_school
      - DB_USER=online_school_user
      - DB_PASSWORD=online_school_pass
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - online_school_network
    command: >
      sh -c "
        sleep 15 &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn --bind 0.0.0.0:8000 --workers 3 config.wsgi:application
      "

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  online_school_network:
    driver: bridge