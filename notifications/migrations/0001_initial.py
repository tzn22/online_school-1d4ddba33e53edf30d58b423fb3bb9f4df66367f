# Generated by Django 4.2.24 on 2025-09-22 15:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('notification_type', models.CharField(choices=[('info', 'Информация'), ('warning', 'Предупреждение'), ('error', 'Ошибка'), ('success', 'Успех'), ('lesson', 'Занятие'), ('payment', 'Платеж'), ('message', 'Сообщение'), ('system', 'Система')], default='info', max_length=20, verbose_name='Тип уведомления')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('push', 'Push-уведомление'), ('telegram', 'Telegram'), ('whatsapp', 'WhatsApp'), ('sms', 'SMS'), ('in_app', 'В приложении')], default='in_app', max_length=20, verbose_name='Канал отправки')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлено')),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='ID связанного объекта')),
                ('related_object_type', models.CharField(blank=True, max_length=100, verbose_name='Тип связанного объекта')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата отправки')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата прочтения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название шаблона')),
                ('title_template', models.CharField(max_length=255, verbose_name='Шаблон заголовка')),
                ('message_template', models.TextField(verbose_name='Шаблон сообщения')),
                ('notification_type', models.CharField(choices=[('info', 'Информация'), ('warning', 'Предупреждение'), ('error', 'Ошибка'), ('success', 'Успех'), ('lesson', 'Занятие'), ('payment', 'Платеж'), ('message', 'Сообщение')], default='info', max_length=20, verbose_name='Тип уведомления')),
                ('channels', models.JSONField(default=list, verbose_name='Каналы отправки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Шаблон уведомления',
                'verbose_name_plural': 'Шаблоны уведомлений',
            },
        ),
        migrations.CreateModel(
            name='UserNotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email уведомления')),
                ('email_lesson_reminders', models.BooleanField(default=True, verbose_name='Напоминания о занятиях по email')),
                ('email_payment_notifications', models.BooleanField(default=True, verbose_name='Уведомления о платежах по email')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='Push-уведомления')),
                ('push_lesson_reminders', models.BooleanField(default=True, verbose_name='Напоминания о занятиях push')),
                ('telegram_notifications', models.BooleanField(default=False, verbose_name='Telegram уведомления')),
                ('telegram_chat_id', models.CharField(blank=True, max_length=100, verbose_name='Telegram Chat ID')),
                ('whatsapp_notifications', models.BooleanField(default=False, verbose_name='WhatsApp уведомления')),
                ('whatsapp_phone', models.CharField(blank=True, max_length=20, verbose_name='Номер WhatsApp')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='SMS уведомления')),
                ('sms_phone', models.CharField(blank=True, max_length=20, verbose_name='Номер телефона для SMS')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Настройки уведомлений',
                'verbose_name_plural': 'Настройки уведомлений',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('push', 'Push-уведомление'), ('telegram', 'Telegram'), ('whatsapp', 'WhatsApp'), ('sms', 'SMS')], max_length=20, verbose_name='Канал')),
                ('status', models.CharField(choices=[('pending', 'В ожидании'), ('sent', 'Отправлено'), ('failed', 'Ошибка')], default='pending', max_length=20, verbose_name='Статус')),
                ('error_message', models.TextField(blank=True, verbose_name='Сообщение об ошибке')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата отправки')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification', verbose_name='Уведомление')),
            ],
            options={
                'verbose_name': 'Лог уведомления',
                'verbose_name_plural': 'Логи уведомлений',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='notificatio_user_id_427e4b_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_46ad24_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='notificatio_notific_f2898f_idx'),
        ),
    ]
