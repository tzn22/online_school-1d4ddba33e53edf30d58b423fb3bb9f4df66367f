# Generated by Django 4.2.24 on 2025-10-15 17:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0003_alter_course_duration_hours'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LiveSmartRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', models.CharField(max_length=100, unique=True, verbose_name='ID комнаты')),
                ('room_name', models.CharField(max_length=255, verbose_name='Название комнаты')),
                ('join_url', models.URLField(blank=True, verbose_name='Ссылка для присоединения')),
                ('host_url', models.URLField(blank=True, verbose_name='Ссылка для хоста')),
                ('room_password', models.CharField(blank=True, max_length=50, verbose_name='Пароль комнаты')),
                ('max_participants', models.PositiveIntegerField(default=50, verbose_name='Максимальное количество участников')),
                ('is_recording_enabled', models.BooleanField(default=False, verbose_name='Запись включена')),
                ('recording_url', models.URLField(blank=True, verbose_name='Ссылка на запись')),
                ('recording_file', models.FileField(blank=True, null=True, upload_to='livesmart_recordings/', verbose_name='Файл записи')),
                ('status', models.CharField(choices=[('scheduled', 'Запланирована'), ('active', 'Активна'), ('completed', 'Завершена'), ('cancelled', 'Отменена')], default='scheduled', max_length=20, verbose_name='Статус комнаты')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата начала')),
                ('ended_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания')),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='livesmart_room', to='courses.lesson', verbose_name='Занятие')),
            ],
            options={
                'verbose_name': 'Комната LiveSmart',
                'verbose_name_plural': 'Комнаты LiveSmart',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveSmartRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording_id', models.CharField(max_length=100, unique=True, verbose_name='ID записи')),
                ('title', models.CharField(max_length=255, verbose_name='Название записи')),
                ('description', models.TextField(blank=True, verbose_name='Описание записи')),
                ('file_url', models.URLField(blank=True, verbose_name='Ссылка на файл')),
                ('file', models.FileField(blank=True, null=True, upload_to='livesmart_recordings/', verbose_name='Файл записи')),
                ('file_size', models.BigIntegerField(default=0, verbose_name='Размер файла (байты)')),
                ('duration', models.DurationField(verbose_name='Длительность записи')),
                ('is_public', models.BooleanField(default=False, verbose_name='Публичная запись')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', to='livesmart.livesmartroom', verbose_name='Комната')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Загрузил')),
            ],
            options={
                'verbose_name': 'Запись LiveSmart',
                'verbose_name_plural': 'Записи LiveSmart',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveSmartParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('host', 'Хост'), ('co_host', 'Ко-хост'), ('participant', 'Участник'), ('observer', 'Наблюдатель')], default='participant', max_length=20, verbose_name='Роль')),
                ('joined_at', models.DateTimeField(blank=True, null=True, verbose_name='Время присоединения')),
                ('left_at', models.DateTimeField(blank=True, null=True, verbose_name='Время выхода')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Длительность участия')),
                ('is_present', models.BooleanField(default=False, verbose_name='Присутствовал')),
                ('participant_id', models.CharField(blank=True, max_length=100, verbose_name='ID участника')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='livesmart.livesmartroom', verbose_name='Комната')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Участник LiveSmart',
                'verbose_name_plural': 'Участники LiveSmart',
                'ordering': ['role', 'joined_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveSmartSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(blank=True, max_length=255, verbose_name='API ключ')),
                ('api_secret', models.CharField(blank=True, max_length=255, verbose_name='API секрет')),
                ('default_room_settings', models.JSONField(blank=True, default=dict, verbose_name='Настройки комнаты по умолчанию')),
                ('is_recording_enabled', models.BooleanField(default=False, verbose_name='Запись включена по умолчанию')),
                ('max_participants', models.PositiveIntegerField(default=50, verbose_name='Максимальное количество участников по умолчанию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='livesmart_settings', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Настройки LiveSmart',
                'verbose_name_plural': 'Настройки LiveSmart',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='livesmart_l_user_id_c6f697_idx'), models.Index(fields=['api_key'], name='livesmart_l_api_key_c8af44_idx'), models.Index(fields=['is_recording_enabled'], name='livesmart_l_is_reco_9bfc58_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='livesmartroom',
            index=models.Index(fields=['lesson', 'status'], name='livesmart_l_lesson__c51798_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartroom',
            index=models.Index(fields=['room_id'], name='livesmart_l_room_id_9788e4_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartroom',
            index=models.Index(fields=['created_at'], name='livesmart_l_created_dc2ef2_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartroom',
            index=models.Index(fields=['started_at'], name='livesmart_l_started_a9f60b_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartroom',
            index=models.Index(fields=['ended_at'], name='livesmart_l_ended_a_051776_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartrecording',
            index=models.Index(fields=['room', 'created_at'], name='livesmart_l_room_id_97ec1a_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartrecording',
            index=models.Index(fields=['recording_id'], name='livesmart_l_recordi_0e6889_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartrecording',
            index=models.Index(fields=['is_public', 'created_at'], name='livesmart_l_is_publ_26da2b_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartrecording',
            index=models.Index(fields=['uploaded_by', 'created_at'], name='livesmart_l_uploade_dddd8c_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartrecording',
            index=models.Index(fields=['published_at'], name='livesmart_l_publish_11e481_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartparticipant',
            index=models.Index(fields=['room', 'user'], name='livesmart_l_room_id_921faf_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartparticipant',
            index=models.Index(fields=['role'], name='livesmart_l_role_f624a7_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartparticipant',
            index=models.Index(fields=['is_present'], name='livesmart_l_is_pres_a3c604_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartparticipant',
            index=models.Index(fields=['joined_at'], name='livesmart_l_joined__30205c_idx'),
        ),
        migrations.AddIndex(
            model_name='livesmartparticipant',
            index=models.Index(fields=['left_at'], name='livesmart_l_left_at_240070_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='livesmartparticipant',
            unique_together={('room', 'user')},
        ),
    ]
