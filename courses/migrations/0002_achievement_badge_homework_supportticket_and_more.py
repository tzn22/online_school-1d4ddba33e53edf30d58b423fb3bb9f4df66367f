# Generated by Django 4.2.24 on 2025-09-25 09:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название достижения')),
                ('description', models.TextField(verbose_name='Описание')),
                ('achievement_type', models.CharField(choices=[('completion', 'Завершение курса'), ('perfect_score', 'Идеальный результат'), ('attendance', 'Посещение'), ('homework', 'Домашние задания'), ('test', 'Тесты'), ('participation', 'Участие')], max_length=20, verbose_name='Тип достижения')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='achievements/', verbose_name='Иконка')),
                ('required_points', models.PositiveIntegerField(default=0, verbose_name='Необходимые баллы')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Достижение',
                'verbose_name_plural': 'Достижения',
            },
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название бейджа')),
                ('description', models.TextField(verbose_name='Описание')),
                ('badge_type', models.CharField(choices=[('participation', 'Участие'), ('excellent', 'Отлично'), ('attendance', 'Посещение'), ('homework', 'Домашнее задание'), ('test', 'Тест'), ('achievement', 'Достижение')], max_length=20, verbose_name='Тип бейджа')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='badges/', verbose_name='Иконка')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Бейдж',
                'verbose_name_plural': 'Бейджи',
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название задания')),
                ('description', models.TextField(verbose_name='Описание задания')),
                ('due_date', models.DateTimeField(verbose_name='Срок сдачи')),
                ('max_points', models.PositiveIntegerField(default=100, verbose_name='Максимальный балл')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeworks', to='courses.lesson', verbose_name='Занятие')),
            ],
            options={
                'verbose_name': 'Домашнее задание',
                'verbose_name_plural': 'Домашние задания',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Тема')),
                ('description', models.TextField(verbose_name='Описание проблемы')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('in_progress', 'В работе'), ('resolved', 'Решен'), ('closed', 'Закрыт')], default='new', max_length=20, verbose_name='Статус')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('urgent', 'Срочный')], default='medium', max_length=10, verbose_name='Приоритет')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата решения')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Назначен администратору')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Тикет поддержки',
                'verbose_name_plural': 'Тикеты поддержки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='attendance',
            name='comment',
            field=models.TextField(blank=True, verbose_name='Комментарий'),
        ),
        migrations.CreateModel(
            name='VideoLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zoom_meeting_id', models.CharField(blank=True, max_length=100, verbose_name='Zoom Meeting ID')),
                ('zoom_join_url', models.URLField(blank=True, verbose_name='Ссылка для присоединения')),
                ('zoom_start_url', models.URLField(blank=True, verbose_name='Ссылка для старта')),
                ('meeting_password', models.CharField(blank=True, max_length=50, verbose_name='Пароль встречи')),
                ('recording_url', models.URLField(blank=True, verbose_name='Ссылка на запись')),
                ('recording_file', models.FileField(blank=True, null=True, upload_to='recordings/', verbose_name='Файл записи')),
                ('is_recording_enabled', models.BooleanField(default=False, verbose_name='Запись включена')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='video_lesson', to='courses.lesson', verbose_name='Занятие')),
            ],
            options={
                'verbose_name': 'Видеоурок',
                'verbose_name_plural': 'Видеоуроки',
            },
        ),
        migrations.CreateModel(
            name='TicketMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Отправитель')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='courses.supportticket', verbose_name='Тикет')),
            ],
            options={
                'verbose_name': 'Сообщение тикета',
                'verbose_name_plural': 'Сообщения тикетов',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100, verbose_name='Название теста')),
                ('score', models.IntegerField(verbose_name='Балл')),
                ('max_score', models.IntegerField(default=100, verbose_name='Максимальный балл')),
                ('date_taken', models.DateTimeField(auto_now_add=True, verbose_name='Дата прохождения')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Курс')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.lesson', verbose_name='За занятие')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Результат теста',
                'verbose_name_plural': 'Результаты тестов',
            },
        ),
        migrations.CreateModel(
            name='LessonRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название записи')),
                ('file', models.FileField(upload_to='lesson_recordings/', verbose_name='Файл записи')),
                ('duration', models.DurationField(verbose_name='Длительность')),
                ('file_size', models.BigIntegerField(verbose_name='Размер файла (байты)')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('is_public', models.BooleanField(default=True, verbose_name='Публичная')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', to='courses.lesson', verbose_name='Занятие')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Загрузил')),
            ],
            options={
                'verbose_name': 'Запись урока',
                'verbose_name_plural': 'Записи уроков',
            },
        ),
        migrations.CreateModel(
            name='LessonMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название материала')),
                ('material_type', models.CharField(choices=[('pdf', 'PDF документ'), ('doc', 'Документ'), ('ppt', 'Презентация'), ('video', 'Видео'), ('audio', 'Аудио'), ('image', 'Изображение'), ('link', 'Ссылка')], max_length=10, verbose_name='Тип материала')),
                ('file', models.FileField(blank=True, null=True, upload_to='lesson_materials/', verbose_name='Файл')),
                ('link', models.URLField(blank=True, verbose_name='Ссылка')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_required', models.BooleanField(default=False, verbose_name='Обязательный материал')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='courses.lesson', verbose_name='Занятие')),
            ],
            options={
                'verbose_name': 'Материал урока',
                'verbose_name_plural': 'Материалы урока',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_topics', models.JSONField(default=list, verbose_name='Пройденные темы')),
                ('test_results', models.JSONField(default=dict, verbose_name='Результаты тестов')),
                ('current_level', models.CharField(choices=[('beginner', 'Начальный'), ('intermediate', 'Средний'), ('advanced', 'Продвинутый')], default='beginner', max_length=20, verbose_name='Текущий уровень')),
                ('overall_progress', models.PositiveIntegerField(default=0, verbose_name='Общий прогресс (%)')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Последняя активность')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Курс')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Прогресс студента',
                'verbose_name_plural': 'Прогресс студентов',
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='StudentBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата выдачи')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('awarded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awarded_badges', to=settings.AUTH_USER_MODEL, verbose_name='Выдан преподавателем')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.badge', verbose_name='Бейдж')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.lesson', verbose_name='За занятие')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges_received', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Выданный бейдж',
                'verbose_name_plural': 'Выданные бейджи',
                'unique_together': {('student', 'badge', 'lesson')},
            },
        ),
        migrations.CreateModel(
            name='StudentAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата получения')),
                ('progress', models.PositiveIntegerField(default=0, verbose_name='Прогресс (%)')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.achievement', verbose_name='Достижение')),
                ('earned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awarded_achievements', to=settings.AUTH_USER_MODEL, verbose_name='Выдано преподавателем')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Полученное достижение',
                'verbose_name_plural': 'Полученные достижения',
                'unique_together': {('student', 'achievement')},
            },
        ),
        migrations.CreateModel(
            name='MeetingParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('host', 'Хост'), ('co_host', 'Ко-хост'), ('participant', 'Участник')], default='participant', max_length=20, verbose_name='Роль')),
                ('joined_at', models.DateTimeField(verbose_name='Время присоединения')),
                ('left_at', models.DateTimeField(blank=True, null=True, verbose_name='Время выхода')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Длительность участия')),
                ('is_present', models.BooleanField(default=False, verbose_name='Присутствовал')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_participants', to='courses.lesson', verbose_name='Занятие')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Участник встречи',
                'verbose_name_plural': 'Участники встречи',
                'unique_together': {('lesson', 'user')},
            },
        ),
        migrations.CreateModel(
            name='HomeworkSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='homework_submissions/', verbose_name='Файл задания')),
                ('text_content', models.TextField(blank=True, verbose_name='Текстовое задание')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата сдачи')),
                ('grade', models.PositiveIntegerField(blank=True, null=True, verbose_name='Оценка')),
                ('feedback', models.TextField(blank=True, verbose_name='Комментарий преподавателя')),
                ('is_late', models.BooleanField(default=False, verbose_name='Сдано с опозданием')),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='courses.homework', verbose_name='Домашнее задание')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homework_submissions', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Сдача задания',
                'verbose_name_plural': 'Сдачи заданий',
                'ordering': ['-submitted_at'],
                'unique_together': {('homework', 'student')},
            },
        ),
    ]
